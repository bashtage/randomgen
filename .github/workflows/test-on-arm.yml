name: Build wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: ${{ matrix.os }}, Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python: ["cp311"]
        os: [ubuntu-latest]
    env:
      BUILD_COMMIT: "main"
      CIBW_BUILD: ${{ matrix.python }}-*
      CIBW_ARCHS_LINUX: "aarch64"
      CIBW_SKIP: "pp* *musllinux*"
      CIBW_TEST_REQUIRES: pytest pytest-xdist
      CIBW_TEST_COMMAND: python -c "import randomgen; randomgen.test(['--skip-slow','-n','2'])"
      # Avoid testing on emulated architectures
      CIBW_TEST_SKIP: "*-*linux_{ppc64le,s390x}"
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: 'auditwheel repair --strip -w {dest_dir} {wheel}'
      MKL_NUM_THREADS: 1
      OMP_NUM_THREADS: 1
      OPENLAS_NUM_THREADS: 1

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel~=2.0
      - name: Build and test wheel
        run: |
          echo $PWD
          ls
          python -m cibuildwheel --output-dir wheelhouse .
          echo "Show wheelhouse contents"
          ls ./wheelhouse
